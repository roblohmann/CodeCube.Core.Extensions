# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Version.Major).$(Version.Minor).$(Rev:r)-alpha

trigger:
  batch: true
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: 'Build'
    displayName: 'CI & CD BUild'
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Assembly-Info-NetCore@2
            displayName: 'Set assembly info'
            inputs:
              Path: '$(Build.SourcesDirectory)'
              FileNames: '**/CodeCube.Core.Extensions.csproj'
              InsertAttributes: false
              FileEncoding: 'utf-8'
              WriteBOM: false
              PackageId: 'CodeCube.Core.Extensions'
              Authors: 'Rob Lohmann'
              Company: 'Rob Lohmann'
              Product: 'CodeCube.Core.Extensions'
              Copyright: 'Copyright Â© 2021 by Rob Lohmann'
              PackageProjectUrl: 'https://github.com/roblohmann/CodeCube.Core.Extensions'
              RepositoryUrl: 'https://github.com/roblohmann/CodeCube.Core.Extensions'
              VersionNumber: '$(Build.BuildNumber)'
              FileVersionNumber: '$(Build.BuildNumber)'
              PackageVersion: '$(Build.BuildNumber)'
              LogLevel: 'verbose'
              FailOnWarning: false
              DisableTelemetry: false
          - task: DotNetCoreCLI@2
            displayName: 'Restore NuGet Packages'
            inputs:
              command: 'restore'
              projects: '**/CodeCube.Core.Extensions.csproj'
              feedsToUse: 'select'
          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: 'build'
              projects: '**/CodeCube.Core.Extensions.csproj'
              arguments: '--configuration $(BuildConfiguration)'
          - task: DotNetCoreCLI@2
            displayName: 'Run Unit Tests'
            inputs:
              command: 'test'
              projects: 'test/*Tests/*.csproj'
              arguments: '--configuration $(BuildConfiguration)'
          - task: DotNetCoreCLI@2
            displayName: 'NuGet Pack'
            inputs:
              command: 'pack'
              packagesToPack: '**/CodeCube.Core.Extensions.csproj'
              versioningScheme: 'byBuildNumber'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy NuGet'
    dependsOn: Build
    condition: succeeded('Build')    
    jobs:
    - job: 'Deploy'
      steps:
      - task: NuGetCommand@2
        displayName: 'NuGet Push'
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          nuGetFeedType: 'external'
          publishFeedCredentials: 'nuget.org'